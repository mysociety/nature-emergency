$spacers: map-merge($spacers, (
    "gutter": calc(var(--#{$variable-prefix}gutter-x, #{$grid-gutter-width}) * 0.5)
));

@if $enable-negative-margins {
    $negative-spacers: map-merge($negative-spacers, (
        "ngutter": calc(var(--#{$variable-prefix}gutter-x, #{$grid-gutter-width}) * -0.5)
    ));
}

$gray-colors: ();
@each $key, $value in $grays {
    $gray-colors: map-merge(
        $gray-colors,
        ( "gray-#{$key}": $value )
    );
}

$utilities: map-merge(
    $utilities,
    (
        "color": map-merge(
            map-get($utilities, "color"),
            (
                values: map-merge(
                    map-get(map-get($utilities, "color"), "values"),
                    $gray-colors,
                ),
            ),
        ),
        "background-color": map-merge(
            map-get($utilities, "background-color"),
            (
                values: map-merge(
                    map-get(map-get($utilities, "background-color"), "values"),
                    $gray-colors,
                ),
            ),
        ),
        "font-family": map-merge(
            map-get($utilities, "font-family"),
            (
                values: map-merge(
                    map-get(map-get($utilities, "font-family"), "values"),
                    (
                        sans-serif: var(--#{$prefix}font-sans-serif),
                        serif: var(--#{$prefix}font-serif),
                    )
                ),
            ),
        ),
        "font-weight": map-merge(
            map-get($utilities, "font-weight"),
            (
                values: map-merge(
                    map-get(map-get($utilities, "font-weight"), "values"),
                    (
                        lightest: 100,
                        boldest: 900
                    ),
                ),
            ),
        ),
        "line-height": map-merge(
            map-get($utilities, "line-height"),
            (
                values: map-merge(
                    map-get(map-get($utilities, "line-height"), "values"),
                    (
                        md: 1.3
                    ),
                ),
            ),
        ),
        "max-width": map-merge(
            map-get($utilities, "max-width"),
            (
                values: (
                    50: 50%,
                    100: 100%,
                    10rem: 10rem, // 160px, 3-6 words
                    20rem: 20rem, // 320px, 6-9 words
                    30rem: 30rem, // 480px, 9-12 words
                    35rem: 35rem,
                    40rem: 40rem, // 640px, 12-15 words
                    45rem: 45rem,
                    50rem: 50rem,
                ),
            ),
        ),
        "overflow": map-merge(
            map-get($utilities, "overflow"),
            (
                responsive: true
            )
        ),
        "overflow-x": map-merge(
            map-get($utilities, "overflow-x"),
            (
                responsive: true
            )
        ),
        "overflow-y": map-merge(
            map-get($utilities, "overflow-y"),
            (
                responsive: true
            )
        ),
        "position": map-merge(
            map-get($utilities, "position"),
            (
                responsive: true
            ),
        ),
        "width": map-merge(
            map-get($utilities, "width"),
            (
                responsive: true,
                values: map-merge(
                    map-get(map-get($utilities, "width"), "values"),
                    (
                        10: 10%,
                        15: 15%,
                        20: 20%,
                        60: 60%,
                        70: 70%,
                        80: 80%,
                        90: 90%
                    )
                )
            )
        ),
    ),
);



@each $color, $value in $gray-colors {
    $color-rgb: to-rgb($value);
    .text-bg-#{$color} {
        color: color-contrast($value) if($enable-important-utilities, !important, null);
        background-color: RGBA($color-rgb, var(--#{$prefix}bg-opacity, 1)) if($enable-important-utilities, !important, null);
    }
}
